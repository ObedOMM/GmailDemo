{"version":3,"sources":["features/userSlice.js","firebase.js","Header.js","SidebarOption.js","features/mailSlice.js","Sidebar.js","Section.js","EmailRow.js","EmailList.js","Mail.js","SendMail.js","Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Header","useSelector","dispatch","useDispatch","className","IconButton","src","alt","placeholder","type","Avatar","onClick","signOut","then","photoUrl","SidebarOption","Icon","title","number","selected","mailSlice","selectedMail","sendMessageIsOpen","selectMail","openSendMessage","closeSendMessage","selectOpenMail","mail","selectSendMessageIsOpen","Sidebar","Button","startIcon","fontSize","InboxIcon","StarIcon","AccessTimeIcon","LabelImportantIcon","NearMeIcon","NoteIcon","ExpandMoreIcon","Section","color","style","borderBottom","EmailRow","id","subject","description","time","history","useHistory","push","Checkbox","EmailList","useState","emails","setEmails","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","PeopleIcon","LocalOfferIcon","to","message","timestamp","Date","seconds","toUTCString","Mail","SendMail","useForm","register","handleSubmit","errors","onSubmit","formData","console","log","add","FieldValue","serverTimestamp","ref","required","variant","Login","signInWithPopup","displayName","email","photoURL","catch","error","alert","App","onAuthStateChanged","path","configureStore","reducer","mailReducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c70c6c16.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n\r\n    logout: state => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCccKt4Qu9CzVpfkWVYOEVVRpZlYY6u3Ds\",\r\n    authDomain: \"clone-873c1.firebaseapp.com\",\r\n    projectId: \"clone-873c1\",\r\n    storageBucket: \"clone-873c1.appspot.com\",\r\n    messagingSenderId: \"849458215413\",\r\n    appId: \"1:849458215413:web:0ad0d4537983392c2ec8bc\",\r\n    measurementId: \"G-5Z386WJH00\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export { db, auth, provider };","import React from 'react';\r\nimport './Header.css'; \r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout, selectUser } from './features/userSlice';\r\nimport { auth } from './firebase';\r\n\r\nfunction Header() {\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch();\r\n\r\n    const signOut = () => {\r\n        auth.signOut().then(() => {\r\n            dispatch(logout());\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__left\">\r\n                <IconButton>\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <img src=\"./gmail.PNG\" alt=\"\" />\r\n            </div>\r\n\r\n            <div className=\"header__middle\">\r\n                <SearchIcon />\r\n                <input placeholder=\"Search mail\" type=\"text\" />\r\n                <ArrowDropDownIcon className=\"heade__inputCaret\" />\r\n            </div>\r\n            \r\n            <div className=\"header__right\">\r\n                <IconButton>\r\n                    <AppsIcon />\r\n                </IconButton>\r\n\r\n                <IconButton>\r\n                    <NotificationsIcon />\r\n                </IconButton>\r\n                <Avatar onClick={signOut} src={user?.photoUrl} />\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport \"./SidebarOption.css\";\r\n\r\nfunction SidebarOption({ Icon, title, number, selected }) {\r\n    return (\r\n        <div className={`sidebarOption ${selected && 'sidebarOption--active'} `}>\r\n            <Icon />\r\n            <h3>{title}</h3>\r\n            <p>{number}</p>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOption;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const mailSlice = createSlice({\r\n  name: 'mail',\r\n  initialState: {\r\n    selectedMail: null,\r\n    sendMessageIsOpen: false,\r\n  },\r\n  reducers: {\r\n    selectMail: (state, action) => {\r\n      state.selectedMail = action.payload;\r\n    },\r\n\r\n    openSendMessage: state => {\r\n      state.sendMessageIsOpen = true;\r\n    },\r\n    closeSendMessage: state => {\r\n      state.sendMessageIsOpen = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  selectMail, \r\n  openSendMessage, \r\n  closeSendMessage \r\n} = mailSlice.actions;\r\n\r\nexport const selectOpenMail = state => state.mail.selectedMail;\r\nexport const selectSendMessageIsOpen = state => state.mail.sendMessageIsOpen;\r\n\r\nexport default mailSlice.reducer;\r\n","import { IconButton, Button } from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport \"./Sidebar.css\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport SidebarOption from './SidebarOption';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport NearMeIcon from '@material-ui/icons/NearMe';\r\nimport NoteIcon from '@material-ui/icons/Note';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport DuoIcon from '@material-ui/icons/Duo';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { openSendMessage } from \"./features/mailSlice\";\r\n\r\n\r\nfunction Sidebar() {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n           <Button \r\n                startIcon={<AddIcon fontSize=\"large\" />}\r\n                className=\"sidebar__compose\"\r\n                onClick={() => dispatch(openSendMessage())}\r\n            >\r\n                Compose\r\n            </Button>\r\n            \r\n            <SidebarOption \r\n                Icon={InboxIcon} \r\n                title=\"Inbox\" \r\n                number={54} \r\n                selected={true} \r\n            />\r\n            <SidebarOption Icon={StarIcon} title=\"Starred\" number={54} />\r\n            <SidebarOption Icon={AccessTimeIcon} title=\"Snoozed\" number={54} />\r\n            <SidebarOption Icon={LabelImportantIcon} title=\"Important\" number={54} />\r\n            <SidebarOption Icon={NearMeIcon} title=\"Sent\" number={54} />\r\n            <SidebarOption Icon={NoteIcon} title=\"Drafts\" number={54} />\r\n            <SidebarOption Icon={ExpandMoreIcon} title=\"More\" number={54} />\r\n\r\n            <div className=\"sidebar__footer\">\r\n                <div className=\"sidebar__footerIcons\">\r\n                    <IconButton>\r\n                        <PersonIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <DuoIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <PhoneIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react';\r\nimport './Section.css';\r\n\r\nfunction Section({ Icon, title, color, selected }) {\r\n    return (\r\n        <div \r\n            className={`section ${selected && \"section--selected\"}`}\r\n            style={{\r\n                borderBottom: `3px solid ${color}`,\r\n                color: `${selected && color}`,\r\n            }}\r\n        >\r\n            <Icon />\r\n            <h4>{title}</h4>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Section;\r\n","import { Checkbox, IconButton } from '@material-ui/core';\r\nimport React from 'react';\r\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\"\r\nimport LabelImportantOutlinedIcon from \"@material-ui/icons/LabelImportantOutlined\"\r\n\r\nimport \"./EmailRow.css\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { selectMail } from './features/mailSlice';\r\n\r\nfunction EmailRow({ id, title, subject, description, time }) {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const openMail = () => {\r\n        dispatch(selectMail({\r\n            id,\r\n            title,\r\n            subject,\r\n            description,\r\n            time,\r\n        }));\r\n\r\n        history.push(\"/mail\");\r\n    }\r\n\r\n    return (\r\n        <div onClick={openMail } className=\"emailRow\">\r\n            <div className=\"emailRow__options\">\r\n                <Checkbox />\r\n                <IconButton>\r\n                    <StarBorderOutlinedIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <LabelImportantOutlinedIcon />\r\n                </IconButton>\r\n            </div>\r\n\r\n            <h3 className=\"emailRow__title\">\r\n                {title}\r\n            </h3>\r\n\r\n            <div className=\"emailRow__message\">\r\n                <h4>{subject}{\" \"} \r\n                    <span className=\"emailRow__description\">\r\n                        - {description}\r\n                    </span>\r\n                </h4>\r\n            </div>\r\n\r\n            <div className=\"emailRow__time\">\r\n                {time}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmailRow\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Checkbox, IconButton } from '@material-ui/core';\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport RedoIcon from \"@material-ui/icons/Redo\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport KeyboardHideIcon from \"@material-ui/icons/KeyboardHide\";\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport \"./EmailList.css\";\r\nimport Section from './Section';\r\nimport EmailRow from './EmailRow';\r\nimport { db } from './firebase';\r\n\r\nfunction EmailList() {\r\n\r\n    const [emails, setEmails] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection('emails')\r\n            .orderBy('timestamp', 'desc')\r\n            .onSnapshot(snapshot => \r\n                setEmails(\r\n                    snapshot.docs.map(doc => ({\r\n                        id: doc.id,\r\n                        data: doc.data(),\r\n                })\r\n            )))\r\n    }, [])\r\n\r\n    return <div className=\"emailList\">\r\n            <div className=\"emailList__settings\">\r\n                <div className=\"emailList__settingsLeft\">\r\n                    <Checkbox />\r\n                    <IconButton>\r\n                        <ArrowDropDownIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <RedoIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <div className=\"emailList__settingsRight\">\r\n                    <IconButton>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <KeyboardHideIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"emailList__sections\">\r\n                <Section Icon={InboxIcon} title='primary' color='red' selected />\r\n                <Section Icon={PeopleIcon} title='social' color='#1A73E8' />\r\n                <Section Icon={LocalOfferIcon} title='Promotions' color='green' />\r\n            </div>\r\n\r\n            <div className=\"emailList__list\">\r\n                {emails.map(({ id, data: { to, subject, message, timestamp } }) => \r\n                    (\r\n                        <EmailRow\r\n                            id={id}\r\n                            key={id}\r\n                            title={to}\r\n                            subject={subject}\r\n                            description={message}\r\n                            time={new Date(timestamp?.seconds * 1000).toUTCString()}\r\n\r\n                        />\r\n                    ) \r\n                )}\r\n\r\n                <EmailRow\r\n                    title=\"Obed MULUMBA Développeur\"\r\n                    subject=\"Bienvenue dans mon App!!!\"\r\n                    description=\"Veuillez laisser vos commentaires\"\r\n                    time=\"10pm\"\r\n                />\r\n\r\n            \r\n\r\n            </div>\r\n        </div>;\r\n}\r\n\r\nexport default EmailList\r\n","import React from 'react';\r\nimport \"./Mail.css\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport MoveToInboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport LabelImportantIcon from \"@material-ui/icons/LabelImportant\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport UnfoldMoreIcon from \"@material-ui/icons/UnfoldMore\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { useSelector } from 'react-redux';\r\nimport { selectOpenMail } from './features/mailSlice';\r\n\r\nconst Mail = () => {\r\n    const history = useHistory();\r\n    const selectedMail = useSelector(selectOpenMail);\r\n\r\n    return <div className=\"mail\">\r\n            <div className=\"mail__tools\">\r\n                <div className=\"mail__toolsLeft\">\r\n                    <IconButton onClick={() => history.push(\"/\")}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <MoveToInboxIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <ErrorIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <EmailIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <WatchLaterIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <CheckCircleIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <LabelImportantIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div> \r\n\r\n                <div className=\"mail__toolsRight\">\r\n                    <IconButton>\r\n                        <UnfoldMoreIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <PrintIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <ExitToAppIcon />\r\n                    </IconButton>\r\n                </div>           \r\n            </div>\r\n            \r\n            <div className=\"mail__body\">\r\n                <div className=\"mail__bodyHeader\">\r\n                    <h2>{selectedMail?.subject}</h2>\r\n                    <LabelImportantIcon className=\"mail__important\" />\r\n                    <p>{selectedMail?.title}</p>\r\n                    <p className=\"mail__time\">{selectedMail?.time}</p>\r\n                </div>\r\n\r\n                <div className=\"mail__message\">\r\n                    <p>{selectedMail?.description}</p>\r\n                </div>\r\n            \r\n            </div>\r\n        </div>\r\n    ;\r\n}\r\n\r\nexport default Mail;\r\n","import React from 'react';\r\nimport \"./SendMail.css\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { Button } from '@material-ui/core';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { closeSendMessage } from './features/mailSlice';\r\nimport { db } from './firebase';\r\nimport firebase from 'firebase';\r\n\r\n\r\nfunction SendMail() {\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n        db.collection('emails').add({\r\n            to: formData.to,\r\n            subject: formData.subject,\r\n            message: formData.message,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n\r\n        dispatch(closeSendMessage())\r\n    };\r\n\r\n    return (\r\n        <div className=\"sendMail\">\r\n            <div className=\"sendMail__header\">\r\n                <h3>New message</h3>\r\n                <CloseIcon onClick={() => dispatch(closeSendMessage())} className=\"sendMail__close\" />\r\n            </div>\r\n            \r\n            <form onSubmit={handleSubmit(onSubmit)} >\r\n                <input \r\n                    name='to' \r\n                    placeholder=\"To\" \r\n                    type=\"email\"\r\n                    ref={register({ required: true })}\r\n                />\r\n                {errors.to && <p className=\"sendMail__error\">To is required</p>}\r\n                <input \r\n                    name='subject' \r\n                    placeholder='Subject' \r\n                    type=\"text\" \r\n                    ref={register({ required: true })} \r\n                />\r\n                {errors.subject && <p className=\"sendMail__error\">Subject is required</p>}\r\n                <input\r\n                    name='message'\r\n                    placeholder='Message...'\r\n                    type=\"text\"\r\n                    className=\"sendMail__message\"\r\n                    ref={register({ required: true })}\r\n                />\r\n                {errors.message && <p className=\"sendMail__error\">Message is required</p>}\r\n\r\n                <div className=\"sendMail__options\">\r\n                    <Button \r\n                        className=\"sendMail__send\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Send\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SendMail\r\n","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from './features/userSlice';\r\nimport { auth, provider } from './firebase';\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n    const dispatch = useDispatch();\r\n\r\n    const signIn = () => {\r\n        auth\r\n            .signInWithPopup(provider)\r\n            .then(({ user }) => {\r\n                dispatch(\r\n                    login({\r\n                        displayName: user.displayName,\r\n                        email:user.email,\r\n                        photoUrl: user.photoURL\r\n                    })\r\n                );\r\n            })\r\n            .catch((error) => alert(error.message)); \r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img src=\"./gmail.PNG\" alt=\"\" />\r\n\r\n                <Button variant=\"contained\" color=\"primary\" onClick={signIn}>Login</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"./Mail.css\";\r\nimport EmailList from './EmailList';\r\nimport Mail from './Mail';\r\nimport SendMail from './SendMail';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectSendMessageIsOpen } from './features/mailSlice';\r\nimport { login, selectUser } from './features/userSlice';\r\nimport Login from './Login';\r\nimport { auth } from './firebase';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const sendMessageIsOpen = useSelector(selectSendMessageIsOpen);\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        // L'utilisateur s'est connceté\r\n        dispatch(\r\n          login({\r\n            displayName: user.displayName,\r\n            email: user.email,\r\n            photoUrl: user.photoURL\r\n          })\r\n        );\r\n      }\r\n    });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Router>\r\n      {!user ? (\r\n        <Login />\r\n      ) : (\r\n        <div className=\"app\">\r\n            <Header />  \r\n            <div className=\"app__body\">\r\n              <Sidebar /> \r\n\r\n              <Switch>\r\n                <Route path=\"/mail\">\r\n                  <Mail /> \r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <EmailList /> \r\n                </Route>\r\n              </Switch>\r\n            </div>\r\n\r\n            {sendMessageIsOpen && <SendMail />}\r\n        </div>        \r\n      )}\r\n\r\n\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport mailReducer from '../features/mailSlice';\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    mail: mailReducer,\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}